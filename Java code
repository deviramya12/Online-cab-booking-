import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

class User {
    private String name;
    private String phoneNumber;

    public User(String name, String phoneNumber) {
        this.name = name;
        this.phoneNumber = phoneNumber;
    }

    public String getName() {
        return name;
    }

    public static User getUserInput() {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter user name: ");
        String name = scanner.nextLine();
        System.out.print("Enter user phone number: ");
        String phoneNumber = scanner.nextLine();
        return new User(name, phoneNumber);
    }
}

class Cab {
    private String cabNumber;
    private String driverName;
    private boolean isAvailable;

    public Cab(String cabNumber, String driverName) {
        this.cabNumber = cabNumber;
        this.driverName = driverName;
        this.isAvailable = true;
    }

    public boolean isAvailable() {
        return isAvailable;
    }

    public void setAvailable(boolean available) {
        isAvailable = available;
    }

    public static Cab getCabInput() {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter cab number: ");
        String cabNumber = scanner.nextLine();
        System.out.print("Enter driver's name: ");
        String driverName = scanner.nextLine();
        return new Cab(cabNumber, driverName);
    }
}

class Booking {
    private User user;
    private Cab cab;
    private String pickupLocation;
    private String destination;
    private boolean isCompleted;

    public Booking(User user, Cab cab, String pickupLocation, String destination) {
        this.user = user;
        this.cab = cab;
        this.pickupLocation = pickupLocation;
        this.destination = destination;
        this.isCompleted = false;
    }

    public User getUser() {
        return user;
    }

    public String getPickupLocation() {
        return pickupLocation;
    }

    public String getDestination() {
        return destination;
    }

    public Cab getCab() {
        return cab;
    }

    public void setCompleted(boolean completed) {
        isCompleted = completed;
    }

    public static Booking getBookingInput(User user, Cab cab) {
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter pickup location: ");
        String pickupLocation = scanner.nextLine();
        System.out.print("Enter destination: ");
        String destination = scanner.nextLine();
        return new Booking(user, cab, pickupLocation, destination);
    }
}

public class OnlineCabBookingSystem {
    private List<User> users = new ArrayList<>();
    private List<Cab> cabs = new ArrayList<>();
    private List<Booking> bookings = new ArrayList<>();

    public void registerUser(User user) {
        users.add(user);
    }

    public void addCab(Cab cab) {
        cabs.add(cab);
    }

    public Booking bookCab(User user, String pickupLocation, String destination) {
        Cab availableCab = findAvailableCab();
        if (availableCab != null) {
            availableCab.setAvailable(false);
            Booking booking = new Booking(user, availableCab, pickupLocation, destination);
            bookings.add(booking);
            System.out.println("Cab booked for " + user.getName() + " from " + pickupLocation + " to " + destination);
            return booking;
        } else {
            System.out.println("No available cabs at the moment. Please try again later.");
            return null;
        }
    }

    private Cab findAvailableCab() {
        for (Cab cab : cabs) {
            if (cab.isAvailable()) {
                return cab;
            }
        }
        return null;
    }

    public void completeBooking(Booking booking) {
        booking.getCab().setAvailable(true);
        booking.setCompleted(true);
        System.out.println("Booking completed for " + booking.getUser().getName() + " from " + booking.getPickupLocation() + " to " + booking.getDestination());
    }

    public static void main(String[] args) {
        OnlineCabBookingSystem system = new OnlineCabBookingSystem();
        Scanner scanner = new Scanner(System.in);

        // Register users
        System.out.println("User Registration:");
        User user1 = User.getUserInput();
        User user2 = User.getUserInput();
        system.registerUser(user1);
        system.registerUser(user2);

        // Add cabs
        System.out.println("Cab Registration:");
        Cab cab1 = Cab.getCabInput();
        Cab cab2 = Cab.getCabInput();
        system.addCab(cab1);
        system.addCab(cab2);

        // Book cabs
        System.out.println("Cab Booking:");
        User bookUser = User.getUserInput();
        System.out.print("Enter pickup location: ");
        String pickupLocation = scanner.nextLine();
        System.out.print("Enter destination: ");
        String destination = scanner.nextLine();
        Booking booking1 = system.bookCab(bookUser, pickupLocation, destination);

        // Complete a booking
        System.out.println("Complete Booking:");
        Booking completedBooking = Booking.getBookingInput(bookUser, booking1.getCab());
        system.completeBooking(completedBooking);
    }
}
